/* eslint-disable */
import 'babel-polyfill';
import SphericalMercator from '@mapbox/sphericalmercator';
import {coordsInBbox} from '../src/modules/dataImport/clipping';

const assert = require('assert');

const merc = new SphericalMercator({
  size: 512,
});

describe('coordsInBbox', () => {
  it('should return false for custom examples', () => {
    let coords;
    coords = [
      [5.672572, 52.027756],
      [5.573459, 52.045932],
      [5.552173, 52.049521],
      [5.420208, 52.052952],
      [5.411861, 52.054259],
      [5.370319, 52.064193],
      [5.362530, 52.065710],
      [5.355277, 52.066159],
      [5.259426, 52.065301],
    ];
    assert.equal(coordsInBbox(coords, merc, 526, 338, 10), false);
    coords = [
      [5.110295, 52.090081],
      [5.104008, 52.095697],
      [5.098901, 52.097490],
      [5.089524, 52.103263],
      [5.033433, 52.135793],
      [5.009530, 52.149633],
      [5.001762, 52.153491],
      [4.997556, 52.156361],
      [4.994552, 52.159375],
      [4.992621, 52.162311],
      [4.991484, 52.165430],
      [4.990840, 52.169984],
      [4.991269, 52.174998],
      [5.007577, 52.233871],
      [5.008049, 52.236513],
      [5.008006, 52.240231],
      [5.006676, 52.244580],
      [5.004208, 52.248417],
      [4.976635, 52.279725],
      [4.960155, 52.298402],
      [4.947710, 52.312086],
    ];
    assert.equal(coordsInBbox(coords, merc, 1053, 674, 11), false);
    assert.equal(coordsInBbox(coords, merc, 1053, 673, 11), false);
    coords = [
      [5.852988, 51.844872],
      [5.859447, 51.857756],
      [5.859876, 51.860062],
      [5.859511, 51.864700],
      [5.855091, 51.917009],
      [5.851915, 51.955202],
      [5.851357, 51.962197],
      [5.852194, 51.966111],
      [5.861335, 51.981061],
      [5.864425, 51.984048],
      [5.868502, 51.985871],
      [5.873759, 51.986730],
      [5.885324, 51.986677],
      [5.900517, 51.985382],
    ];
    assert.equal(coordsInBbox(coords, merc, 2115, 1355, 12), false);
  });
});
